# Copyright (c) 2024 Advanced Micro Devices, Inc. All Rights Reserved.

from schola.core.unreal_connections import StandaloneUnrealConnection
from schola.sb3.env import VecEnv
import pytest
from schola.scripts.sb3.launch import main, SB3ScriptArgs
from schola.core.spaces import DictSpace, BoxSpace, DiscreteSpace
import numpy as np


@pytest.mark.skip(reason="Potentially, hangs if model does not learn sufficiently within the 30000 timesteps")
def test_train_basic(built_game_path):
    args = SB3ScriptArgs(enable_checkpoints=False, 
                         enable_tensorboard=False, 
                         disable_eval=False, 
                         launch_unreal=True,
                         unreal_path=built_game_path,
                         headless=True,
                         timesteps=30000,
                         disable_script=True,
                         map="/Game/Examples/Basic/Maps/BasicTrain")
    print(args)
    mean,_ = main(args)
    assert mean >= 0.05, "Agent Does not path directly to either reward (Reward < 0.06)."
    assert mean >= 0.95, "Agent Does not path directly to the large reward (Reward < 0.96)."

def test_train_script_autogenerate_port(built_game_path):
    args = SB3ScriptArgs(enable_checkpoints=False, 
                         enable_tensorboard=False, 
                         disable_eval=True, 
                         launch_unreal=True,
                         unreal_path=built_game_path,
                         headless=True,
                         timesteps=30000,
                         map="/Game/Examples/Basic/Maps/BasicTrain")
    unreal_connection = args.make_unreal_connection()
    assert isinstance(unreal_connection, StandaloneUnrealConnection), "Did not generate a standalone connection from args"

    assert not unreal_connection.tcp_socket is None, f"Did not create a tcp_socket for autogenerated port {unreal_connection.port}"